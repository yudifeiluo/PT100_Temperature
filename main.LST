C51 COMPILER V8.05a   MAIN                                                                 05/04/2013 15:39:50 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*-----------------------------------------------
   2            名称：IIC协议 PCF8591 AD/DA转换 测试热敏电阻
   3            论坛：www.doflye.net
   4            编写：shifang
   5            修改：无
   6            内容：使用1路ad测试热敏电阻阻值，并查表得到温度值，温度精度和多种参数有关。
   7          ------------------------------------------------*/  
   8          #include <reg52.h>                
   9          #include "i2c.h"
  10          #include "delay.h"
  11          #include "display.h"
  12          #include "keyport.h"
  13          #include "warning.h"
  14          
  15          
  16             /*code unsigned int  vt_table[]=     // 电压温度对照表
  17                  {
  18                          4132,4098,4063,4026,3988,3949,3908,3866,3823,3779,
  19                          3733,3686,3639,3590,3540,3489,3437,3385,3331,3277,
  20                          3222,3166,3110,3054,2997,2940,2882,2824,2767,2709,
  21                          2651,2593,2536,2478,2421,2365,2309,2253,2198,2143,
  22                          2089,2036,1984,1932,1881,1831,1782,1734,1686,1640,
  23                          1594,1550,1506,1464,1422,1381,1341,1303,1265,1228,
  24                          1192
  25                  
  26                  };      */
  27          
  28          #define AddWr 0x90   //写数据地址 PCF8591
  29          #define AddRd 0x91   //读数据地址 PCF8591
  30          
  31          extern bit ack;
  32          unsigned char ReadADC(unsigned char Chl);
  33          /*------------------------------------------------
  34                        主程序
  35          ------------------------------------------------*/
  36          main()
  37          {
  38   1      double num;
  39   1      double mv;
  40   1      int temp;
  41   1        
  42   1      Init_Timer0();
  43   1      
  44   1      while (1)         //主循环
  45   1      {
  46   2       
  47   2       keyport();
  48   2      
  49   2       mv=ReadADC(0)*0.0196; //变成v. 最大值255 ,255x19.6=5000mv，使用浮点计算增加精度   
  50   2       
  51   2       num=((mv/0.01961)-9.12);//计算温度
  52   2      
  53   2       warn(num);
  54   2       num=num*100;
  55   2      if(num<1e-20)
C51 COMPILER V8.05a   MAIN                                                                 05/04/2013 15:39:50 PAGE 2   

  56   2       {
  57   3       TempData[0]=0x40;
  58   3       }
  59   2      else
  60   2      {
  61   3       TempData[0]=0x00;
  62   3      } 
  63   2      TempData[0]=0x00;
  64   2       temp=num;
  65   2      TempData[1]=dofly_DuanMa[temp/10000];
  66   2      TempData[2]=dofly_DuanMa[(temp%10000)/1000];
  67   2       TempData[3]=dofly_DDuanMa[((temp%10000)%1000)/100];
  68   2       TempData[4]=dofly_DuanMa[(((temp%10000)%1000)%100)/10];
  69   2       TempData[5]=dofly_DuanMa[(temp%100)%10];
  70   2       TempData[6]=dofly_DuanMa[12];
  71   2       TempData[7]=dofly_DuanMa[12];
  72   2       DelayMs(200);                    //延时防止采集频率过快
  73   2        }
  74   1      }
  75          /*------------------------------------------------
  76                       读AD转值程序
  77          输入参数 Chl 表示需要转换的通道，范围从0-3
  78          返回值范围0-255
  79          ------------------------------------------------*/
  80            unsigned char ReadADC(unsigned char Chl)
  81           {
  82   1         unsigned char Val;
  83   1         Start_I2c();               //启动总线
  84   1         SendByte(AddWr);             //发送器件地址
  85   1           if(ack==0)return(0);
  86   1         SendByte(0x40|Chl);            //发送器件子地址
  87   1           if(ack==0)return(0);
  88   1         Start_I2c();
  89   1         SendByte(AddWr+1);
  90   1            if(ack==0)return(0);
  91   1         Val=RcvByte();
  92   1         NoAck_I2c();                 //发送非应位
  93   1         Stop_I2c();                  //结束总线
  94   1        return(Val);
  95   1       }
  96          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    386    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
